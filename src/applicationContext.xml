<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	
	<!-- bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="database.properties"></property>
	</bean> -->

	<!-- 配置数据源 -->
	<bean name="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/easybuy"></property>
		<property name="username" value="root"></property>
		<property name="password" value="123456"></property>
	</bean>
	
	<!-- 使用tomcat配置的数据源 -->
	<!-- <bean	name="abc" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/ds_easybuy"></property>
	</bean> -->
	
	<!-- 创建spring和mybatis整合后用的工厂对象 -->
	 <bean id="fact" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定该工厂需要的数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 指定mybatis框架的主配置文件路径，mybatis框架由spring框架来启动 -->
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描的包 -->
		<property name="basePackage" value="com.yx.ssm.DAO"></property>
		<!-- 需要一个session工厂对象的名字（其实获得的session工厂对象给了创建出来的
		dao实现类来做数据库操作） -->
		<property name="sqlSessionFactoryBeanName" value="fact"></property>
	</bean>
	
	<context:component-scan base-package="com.yx.ssm.Service.impl"></context:component-scan>

	<!-- 事务bean -->
	<bean id="trans" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 事务级别 -->
	<tx:advice id="txAdvice" transaction-manager="trans">
		<tx:attributes>
			<!--开启事务  -->
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<!-- 剩下的不开启事务 -->
			<tx:method name="*" read-only="true" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>
	<!-- 将切入点和事务组合 -->
	<aop:config>
		<aop:pointcut id="pc" expression="execution(* com.yx.ssm.Service.impl.*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pc" />
	</aop:config>
	
	<!-- 创建这个类的使用了注解对象 -->
	<context:component-scan base-package="com.yx.ssm.controller"></context:component-scan>
	
	<!-- 映射器和适应器 -->
	<mvc:annotation-driven>
	<!-- 消息转换器！ -->
	<mvc:message-converters>
		<!-- SpringMVC消息转换器 只能传回字符串类型。不能传回集合类型 -->
		<bean class="org.springframework.http.converter.StringHttpMessageConverter">
			<property name="supportedMediaTypes">
				<list>
					<value>application/json;charset=UTF-8</value>
					<value>text/plain;charset=UTF-8</value>
				</list>
			</property>
		</bean>
		<!-- 阿里巴巴提供的一个消息转换器，该消息继承spring框架的消息转换器  可以直接传回集合类型-->
        <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
            <property name="supportedMediaTypes">
				<list>
					<value>application/json;charset=UTF-8</value>
					<value>text/plain;charset=UTF-8</value>
				</list>
			</property>
        <!-- 解决FastJSON工具在转日期格式的问题 -->
             <property name="features">
               	<list>
                  <value>WriteDateUseDateFormat</value>
                 </list>    
             </property>
        </bean>
	</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 完成视图的对应 -->
	<!-- 对转向页面的路径解析。prefix：前缀， suffix：后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 项目中异常的处理器 -->
 	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">WEB-INF/pages/error</prop>
			</props>
		</property>
	</bean> 
	
	<!-- 文件上传 -->
	<bean id="MultipartResolver"
	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</bean>
	
	<!--静态资源解析 包括:js css img -->
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/images/" mapping="/images/**" />
	<mvc:resources location="/css/" mapping="/css/**" />
	
</beans>